// Generated by Dagger (https://dagger.dev).
package com.example.news_main;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NewsMainViewModel_Factory implements Factory<NewsMainViewModel> {
  private final Provider<GetArticleUseCase> getArticleUseCaseProvider;

  public NewsMainViewModel_Factory(Provider<GetArticleUseCase> getArticleUseCaseProvider) {
    this.getArticleUseCaseProvider = getArticleUseCaseProvider;
  }

  @Override
  public NewsMainViewModel get() {
    return newInstance(getArticleUseCaseProvider);
  }

  public static NewsMainViewModel_Factory create(
      Provider<GetArticleUseCase> getArticleUseCaseProvider) {
    return new NewsMainViewModel_Factory(getArticleUseCaseProvider);
  }

  public static NewsMainViewModel newInstance(Provider<GetArticleUseCase> getArticleUseCase) {
    return new NewsMainViewModel(getArticleUseCase);
  }
}
